{"ast":null,"code":"var _jsxFileName = \"/home/nimit/Propelius Technologies/Internship8thSem/Full Stack Development/React JS/task_reminder/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Tasks from \"./components/Tasks/Tasks\";\nimport NewTask from \"./components/NewTask/NewTask\";\nimport useFetch from \"./components/hooks/use-fetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const {\n    data,\n    isLoading,\n    error\n  } = useFetch();\n  const loadedTasks = [];\n  for (const taskKey in data) {\n    loadedTasks.push({\n      id: taskKey,\n      text: data[taskKey].text\n    });\n  }\n  setTasks(loadedTasks);\n\n  // const taskAddHandler = (task) => {\n  //   setTasks((prevTasks) => prevTasks.concat(task));\n  // };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewTask, {\n      onAddTask: taskAddHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      items: tasks,\n      loading: isLoading,\n      error: error,\n      onFetch: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XjyMUl6D0txGTmrfjPwSuj4+5nE=\", false, function () {\n  return [useFetch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Tasks","NewTask","useFetch","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","data","isLoading","error","loadedTasks","taskKey","push","id","text","Fragment","children","onAddTask","taskAddHandler","fileName","_jsxFileName","lineNumber","columnNumber","items","loading","onFetch","_c","$RefreshReg$"],"sources":["/home/nimit/Propelius Technologies/Internship8thSem/Full Stack Development/React JS/task_reminder/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport Tasks from \"./components/Tasks/Tasks\";\nimport NewTask from \"./components/NewTask/NewTask\";\nimport useFetch from \"./components/hooks/use-fetch\";\n\nfunction App() {\n  \n  const [tasks, setTasks] = useState([]);\n\n  const {data, isLoading, error} = useFetch();\n\n\n  const loadedTasks = [];\n\n  for (const taskKey in data) {\n    loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n  }\n\n  setTasks(loadedTasks);\n\n\n\n  // const taskAddHandler = (task) => {\n  //   setTasks((prevTasks) => prevTasks.concat(task));\n  // };\n\n  return (\n    <React.Fragment>\n      <NewTask onAddTask={taskAddHandler} />\n      <Tasks\n        items={tasks}\n        loading={isLoading}\n        error={error}\n        onFetch={() => {}}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,OAAO,MAAM,8BAA8B;AAClD,OAAOC,QAAQ,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAM;IAACU,IAAI;IAAEC,SAAS;IAAEC;EAAK,CAAC,GAAGT,QAAQ,CAAC,CAAC;EAG3C,MAAMU,WAAW,GAAG,EAAE;EAEtB,KAAK,MAAMC,OAAO,IAAIJ,IAAI,EAAE;IAC1BG,WAAW,CAACE,IAAI,CAAC;MAAEC,EAAE,EAAEF,OAAO;MAAEG,IAAI,EAAEP,IAAI,CAACI,OAAO,CAAC,CAACG;IAAK,CAAC,CAAC;EAC7D;EAEAR,QAAQ,CAACI,WAAW,CAAC;;EAIrB;EACA;EACA;;EAEA,oBACER,OAAA,CAACP,KAAK,CAACoB,QAAQ;IAAAC,QAAA,gBACbd,OAAA,CAACH,OAAO;MAACkB,SAAS,EAAEC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtCpB,OAAA,CAACJ,KAAK;MACJyB,KAAK,EAAElB,KAAM;MACbmB,OAAO,EAAEhB,SAAU;MACnBC,KAAK,EAAEA,KAAM;MACbgB,OAAO,EAAEA,CAAA,KAAM,CAAC;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAErB;AAAClB,EAAA,CAhCQD,GAAG;EAAA,QAIuBH,QAAQ;AAAA;AAAA0B,EAAA,GAJlCvB,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}