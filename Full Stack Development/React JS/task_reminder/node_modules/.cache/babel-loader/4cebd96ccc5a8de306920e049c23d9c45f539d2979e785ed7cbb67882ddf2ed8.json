{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nconst useHttp = applyData => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequest = useCallback(() => async reqConfig => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(reqConfig.url, {\n        method: reqConfig.method || \"GET\",\n        body: JSON.stringify(reqConfig.body) || null,\n        headers: reqConfig.headers || {}\n      });\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  }, []);\n  return {\n    sendRequest,\n    isLoading,\n    error\n  };\n};\n_s(useHttp, \"FFcdbk+kTfFKRpY6eKN2uj4p9Os=\");\nexport default useHttp;","map":{"version":3,"names":["useCallback","useState","useHttp","applyData","_s","isLoading","setIsLoading","error","setError","sendRequest","reqConfig","response","fetch","url","method","body","JSON","stringify","headers","ok","Error","data","json","err","message"],"sources":["/home/nimit/Propelius Technologies/Internship8thSem/Full Stack Development/React JS/task_reminder/src/components/hooks/use-http.js"],"sourcesContent":["import { useCallback, useState } from \"react\";\n\nconst useHttp = (applyData) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = useCallback(\n    () => async (reqConfig) => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const response = await fetch(reqConfig.url, {\n          method: reqConfig.method || \"GET\",\n          body: JSON.stringify(reqConfig.body) || null,\n          headers: reqConfig.headers || {},\n        });\n\n        if (!response.ok) {\n          throw new Error(\"Request failed!\");\n        }\n\n        const data = await response.json();\n\n        applyData(data);\n      } catch (err) {\n        setError(err.message || \"Something went wrong!\");\n      }\n      setIsLoading(false);\n    },\n    []\n  );\n\n  return {\n    sendRequest,\n    isLoading,\n    error,\n  };\n};\n\nexport default useHttp;\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAE7C,MAAMC,OAAO,GAAIC,SAAS,IAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMQ,WAAW,GAAGT,WAAW,CAC7B,MAAM,MAAOU,SAAS,IAAK;IACzBJ,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACF,SAAS,CAACG,GAAG,EAAE;QAC1CC,MAAM,EAAEJ,SAAS,CAACI,MAAM,IAAI,KAAK;QACjCC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,SAAS,CAACK,IAAI,CAAC,IAAI,IAAI;QAC5CG,OAAO,EAAER,SAAS,CAACQ,OAAO,IAAI,CAAC;MACjC,CAAC,CAAC;MAEF,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAElCnB,SAAS,CAACkB,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZf,QAAQ,CAACe,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IAClD;IACAlB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EACD,EACF,CAAC;EAED,OAAO;IACLG,WAAW;IACXJ,SAAS;IACTE;EACF,CAAC;AACH,CAAC;AAACH,EAAA,CAnCIF,OAAO;AAqCb,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}