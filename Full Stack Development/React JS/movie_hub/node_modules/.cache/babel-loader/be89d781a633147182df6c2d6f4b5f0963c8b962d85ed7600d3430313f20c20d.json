{"ast":null,"code":"var _jsxFileName = \"/home/nimit/Propelius Technologies/Internship8thSem/Full Stack Development/React JS/movie_hub/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // //1]\n  // const fetchMoviesHandler = () => {\n  //   fetch(\"https://swapi.dev/api/films/\")\n  //     .then((response) => {\n  //       console.log(response.json);\n\n  //       return response.json();\n  //     })\n  //     .then((data) => {\n  //       const transformData = data.results.map((movie) => {\n  //         return {\n  //           id: movie.episode_id,\n  //           title: movie.title,\n  //           releaseDate: movie.release_date,\n  //           openingText: movie.opening_crawl,\n  //         };\n  //       });\n  //       setMovies(transformData);\n  //     });\n  // };\n\n  const fetchMoviesHandler = useCallback(() => {\n    first;\n  }, [second]);\n\n  // // if not use any other external state in the fetchMoviesHandler function then it's ok to pass empty dependencies array\n  // // but if we use then we have to add a dependency\n  // useEffect(() => {\n  //   fetchMoviesHandler();\n  // },[]);\n\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No Data Found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 17\n  }, this);\n  if (movies.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MoviesList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }, this);\n  }\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }, this);\n  }\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/djrXmupudGJZ4TEuxAjJK8qFwI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","useCallback","first","second","content","children","fileName","_jsxFileName","lineNumber","columnNumber","length","Fragment","onClick","_c","$RefreshReg$"],"sources":["/home/nimit/Propelius Technologies/Internship8thSem/Full Stack Development/React JS/movie_hub/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // //1]\n  // const fetchMoviesHandler = () => {\n  //   fetch(\"https://swapi.dev/api/films/\")\n  //     .then((response) => {\n  //       console.log(response.json);\n\n  //       return response.json();\n  //     })\n  //     .then((data) => {\n  //       const transformData = data.results.map((movie) => {\n  //         return {\n  //           id: movie.episode_id,\n  //           title: movie.title,\n  //           releaseDate: movie.release_date,\n  //           openingText: movie.opening_crawl,\n  //         };\n  //       });\n  //       setMovies(transformData);\n  //     });\n  // };\n\n  const fetchMoviesHandler = useCallback(\n    () => {\n      first\n    },\n    [second],\n  )\n  \n\n  // // if not use any other external state in the fetchMoviesHandler function then it's ok to pass empty dependencies array\n  // // but if we use then we have to add a dependency\n  // useEffect(() => {\n  //   fetchMoviesHandler();\n  // },[]);\n\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n\n\n  let content = <p>No Data Found</p>;\n\n  if (movies.length > 0) {\n    content = <MoviesList movies={movies} />;\n  }\n\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p>Loading....</p>;\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>{content}</section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMY,kBAAkB,GAAGC,WAAW,CACpC,MAAM;IACJC,KAAK;EACP,CAAC,EACD,CAACC,MAAM,CACT,CAAC;;EAGD;EACA;EACA;EACA;EACA;;EAEAhB,SAAS,CAAC,MAAM;IACda,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACA,kBAAkB,CAAC,CAAC;EAGxB,IAAII,OAAO,gBAAGb,OAAA;IAAAc,QAAA,EAAG;EAAa;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAElC,IAAIf,MAAM,CAACgB,MAAM,GAAG,CAAC,EAAE;IACrBN,OAAO,gBAAGb,OAAA,CAACF,UAAU;MAACK,MAAM,EAAEA;IAAO;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC1C;EAEA,IAAIX,KAAK,EAAE;IACTM,OAAO,gBAAGb,OAAA;MAAAc,QAAA,EAAIP;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC1B;EAEA,IAAIb,SAAS,EAAE;IACbQ,OAAO,gBAAGb,OAAA;MAAAc,QAAA,EAAG;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC9B;EAEA,oBACElB,OAAA,CAACL,KAAK,CAACyB,QAAQ;IAAAN,QAAA,gBACbd,OAAA;MAAAc,QAAA,eACEd,OAAA;QAAQqB,OAAO,EAAEZ,kBAAmB;QAAAK,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,eACVlB,OAAA;MAAAc,QAAA,EAAUD;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAErB;AAAChB,EAAA,CAnEQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAqEZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}