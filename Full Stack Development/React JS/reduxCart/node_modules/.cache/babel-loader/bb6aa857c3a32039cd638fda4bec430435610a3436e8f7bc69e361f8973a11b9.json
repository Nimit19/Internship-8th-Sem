{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialCartState = {\n  items: [],\n  totalQuantity: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: initialCartState,\n  reducers: {\n    replicateCart: (state, action) => {\n      state.items = action.payload.items;\n      state.totalQuantity = action.payload.totalQuantity;\n    },\n    addItemToCart: (state, action) => {\n      const {\n        id,\n        title,\n        price\n      } = action.payload;\n      state.totalQuantity += 1;\n      const existingItem = state.items.find(item => item.id === id);\n      if (!existingItem) {\n        state.items.push({\n          id: id,\n          title: title,\n          price: price,\n          quantity: 1\n        });\n      } else {\n        existingItem.quantity++;\n      }\n\n      //   state.items = state.items.reduce(\n      //     (newItems, item) => {\n      //       if (item.id === action.payload.id) {\n\n      //         // 1]\n      //         const updatedItem = {...item, quantity: item.quantity + 1}\n\n      //         // 2]\n      //         // newItems[0].quantity += item.quantity;\n      //         return {...newItems, updatedItem};\n      //       }\n      //       return [...newItems, item];\n      //     },\n      //     [{...action.payload, quantity}]\n      //   );\n    },\n    removeItemFromCart: (state, action) => {\n      const id = action.payload;\n      state.totalQuantity -= 1;\n      const existingItem = state.items.find(item => item.id === id);\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== existingItem.id);\n      } else {\n        existingItem.quantity--;\n      }\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","initialCartState","items","totalQuantity","cartSlice","name","initialState","reducers","replicateCart","state","action","payload","addItemToCart","id","title","price","existingItem","find","item","push","quantity","removeItemFromCart","filter","cartActions","actions"],"sources":["/home/nimit/Propelius Technologies/Internship8thSem/Full Stack Development/React JS/reduxCart/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialCartState = {\n  items: [],\n  totalQuantity: 0,\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: initialCartState,\n  reducers: {\n    replicateCart: (state, action) => {\n      state.items = action.payload.items;\n      state.totalQuantity = action.payload.totalQuantity;\n    },\n    addItemToCart: (state, action) => {\n      const { id, title, price } = action.payload;\n      state.totalQuantity += 1;\n\n      const existingItem = state.items.find((item) => item.id === id);\n\n      if (!existingItem) {\n        state.items.push({\n          id: id,\n          title: title,\n          price: price,\n          quantity: 1,\n        });\n      } else {\n        existingItem.quantity++;\n      }\n\n      //   state.items = state.items.reduce(\n      //     (newItems, item) => {\n      //       if (item.id === action.payload.id) {\n\n      //         // 1]\n      //         const updatedItem = {...item, quantity: item.quantity + 1}\n\n      //         // 2]\n      //         // newItems[0].quantity += item.quantity;\n      //         return {...newItems, updatedItem};\n      //       }\n      //       return [...newItems, item];\n      //     },\n      //     [{...action.payload, quantity}]\n      //   );\n    },\n\n    removeItemFromCart: (state, action) => {\n      const id = action.payload;\n      state.totalQuantity -= 1;\n\n      const existingItem = state.items.find((item) => item.id === id);\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter((item) => item.id !== existingItem.id);\n      } else {\n        existingItem.quantity--;\n      }\n    },\n  },\n});\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,gBAAgB,GAAG;EACvBC,KAAK,EAAE,EAAE;EACTC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC5BK,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEL,gBAAgB;EAC9BM,QAAQ,EAAE;IACRC,aAAa,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAChCD,KAAK,CAACP,KAAK,GAAGQ,MAAM,CAACC,OAAO,CAACT,KAAK;MAClCO,KAAK,CAACN,aAAa,GAAGO,MAAM,CAACC,OAAO,CAACR,aAAa;IACpD,CAAC;IACDS,aAAa,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAChC,MAAM;QAAEG,EAAE;QAAEC,KAAK;QAAEC;MAAM,CAAC,GAAGL,MAAM,CAACC,OAAO;MAC3CF,KAAK,CAACN,aAAa,IAAI,CAAC;MAExB,MAAMa,YAAY,GAAGP,KAAK,CAACP,KAAK,CAACe,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACL,EAAE,KAAKA,EAAE,CAAC;MAE/D,IAAI,CAACG,YAAY,EAAE;QACjBP,KAAK,CAACP,KAAK,CAACiB,IAAI,CAAC;UACfN,EAAE,EAAEA,EAAE;UACNC,KAAK,EAAEA,KAAK;UACZC,KAAK,EAAEA,KAAK;UACZK,QAAQ,EAAE;QACZ,CAAC,CAAC;MACJ,CAAC,MAAM;QACLJ,YAAY,CAACI,QAAQ,EAAE;MACzB;;MAEA;MACA;MACA;;MAEA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACF,CAAC;IAEDC,kBAAkB,EAAEA,CAACZ,KAAK,EAAEC,MAAM,KAAK;MACrC,MAAMG,EAAE,GAAGH,MAAM,CAACC,OAAO;MACzBF,KAAK,CAACN,aAAa,IAAI,CAAC;MAExB,MAAMa,YAAY,GAAGP,KAAK,CAACP,KAAK,CAACe,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACL,EAAE,KAAKA,EAAE,CAAC;MAE/D,IAAIG,YAAY,CAACI,QAAQ,KAAK,CAAC,EAAE;QAC/BX,KAAK,CAACP,KAAK,GAAGO,KAAK,CAACP,KAAK,CAACoB,MAAM,CAAEJ,IAAI,IAAKA,IAAI,CAACL,EAAE,KAAKG,YAAY,CAACH,EAAE,CAAC;MACzE,CAAC,MAAM;QACLG,YAAY,CAACI,QAAQ,EAAE;MACzB;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMG,WAAW,GAAGnB,SAAS,CAACoB,OAAO;AAC5C,eAAepB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}