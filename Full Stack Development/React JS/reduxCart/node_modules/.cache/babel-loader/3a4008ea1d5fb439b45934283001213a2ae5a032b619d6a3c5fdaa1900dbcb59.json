{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialCartState = {\n  items: [],\n  totalQuantity: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: initialCartState,\n  reducers: {\n    addItemToCart: (state, action) => {\n      state.totalQuantity += 1;\n      const existingIndex = state.items.find();\n      if (existingIndex) {\n        const newItem = state.items[existingIndex];\n        state.items[existingIndex] = {};\n      }\n\n      //   state.items = state.items.reduce(\n      //     (newItems, item) => {\n      //       if (item.id === action.payload.id) {\n\n      //         // 1]\n      //         const updatedItem = {...item, quantity: item.quantity + 1}\n\n      //         // 2]\n      //         // newItems[0].quantity += item.quantity;\n      //         return {...newItems, updatedItem};\n      //       }\n      //       return [...newItems, item];\n      //     },\n      //     [{...action.payload, quantity}]\n      //   );\n    },\n    removeItemFromCart: (state, action) => {\n      state.items.remove(action.payload);\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","initialCartState","items","totalQuantity","cartSlice","name","initialState","reducers","addItemToCart","state","action","existingIndex","find","newItem","removeItemFromCart","remove","payload","cartActions","actions"],"sources":["/home/nimit/Propelius Technologies/Internship8thSem/Full Stack Development/React JS/reduxCart/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialCartState = {\n  items: [],\n  totalQuantity: 0,\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: initialCartState,\n  reducers: {\n    addItemToCart: (state, action) => {\n      state.totalQuantity += 1;\n\n\n      const existingIndex = state.items.find()\n\n      if(existingIndex){\n        const newItem = state.items[existingIndex]\n        state.items[existingIndex] = {}\n      }\n     \n    //   state.items = state.items.reduce(\n    //     (newItems, item) => {\n    //       if (item.id === action.payload.id) {\n\n    //         // 1]\n    //         const updatedItem = {...item, quantity: item.quantity + 1}\n\n    //         // 2]\n    //         // newItems[0].quantity += item.quantity;\n    //         return {...newItems, updatedItem};\n    //       }\n    //       return [...newItems, item];\n    //     },\n    //     [{...action.payload, quantity}]\n    //   );\n    },\n\n    removeItemFromCart: (state, action) => {\n      state.items.remove(action.payload);\n    },\n  },\n});\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,gBAAgB,GAAG;EACvBC,KAAK,EAAE,EAAE;EACTC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC5BK,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEL,gBAAgB;EAC9BM,QAAQ,EAAE;IACRC,aAAa,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAChCD,KAAK,CAACN,aAAa,IAAI,CAAC;MAGxB,MAAMQ,aAAa,GAAGF,KAAK,CAACP,KAAK,CAACU,IAAI,CAAC,CAAC;MAExC,IAAGD,aAAa,EAAC;QACf,MAAME,OAAO,GAAGJ,KAAK,CAACP,KAAK,CAACS,aAAa,CAAC;QAC1CF,KAAK,CAACP,KAAK,CAACS,aAAa,CAAC,GAAG,CAAC,CAAC;MACjC;;MAEF;MACA;MACA;;MAEA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA,CAAC;IAEDG,kBAAkB,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MACrCD,KAAK,CAACP,KAAK,CAACa,MAAM,CAACL,MAAM,CAACM,OAAO,CAAC;IACpC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,WAAW,GAAGb,SAAS,CAACc,OAAO;AAC5C,eAAed,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}