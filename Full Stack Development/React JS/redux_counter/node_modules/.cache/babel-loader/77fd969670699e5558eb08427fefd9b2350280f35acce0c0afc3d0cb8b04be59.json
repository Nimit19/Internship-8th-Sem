{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increse(state) {\n      state.counter++;\n    },\n    increment(state) {\n      state.counter++;\n    }\n  }\n});\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"toggle\") {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n  return state;\n};\nconst store = createStore(counterReducer);\n\n// // For Simple Redux\n// export default store;\n// import { createStore } from \"redux\";\n\n// const initialState = {\n//   counter: 0,\n//   showCounter: true,\n// };\n\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"increment\") {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === \"increase\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === \"decrement\") {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === \"toggle\") {\n//     return {\n//       showCounter: !state.showCounter,\n//       counter: state.counter,\n//     };\n//   }\n\n//   return state;\n// };\n\n// const store = createStore(counterReducer);\n\n// export default store;","map":{"version":3,"names":["createSlice","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increse","counterReducer","action","type","amount","store","createStore"],"sources":["/home/nimit/Propelius Technologies/Internship8thSem/Full Stack Development/React JS/redux_counter/src/store/index.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  counter: 0,\n  showCounter: true,\n};\n\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers:{\n    increment(state){\n      state.counter++;\n    },\n    decrement(state){\n      state.counter--;\n    },\n    increse(state){\n      state.counter++;\n    },\n    increment(state){\n      state.counter++;\n    },\n  }\n});\n\n\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter,\n    };\n  }\n\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter,\n    };\n  }\n\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter,\n    };\n  }\n\n  if (action.type === \"toggle\") {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter,\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\n\n \n// // For Simple Redux\n// export default store;\n// import { createStore } from \"redux\";\n\n// const initialState = {\n//   counter: 0,\n//   showCounter: true,\n// };\n\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"increment\") {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === \"increase\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === \"decrement\") {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === \"toggle\") {\n//     return {\n//       showCounter: !state.showCounter,\n//       counter: state.counter,\n//     };\n//   }\n\n//   return state;\n// };\n\n// const store = createStore(counterReducer);\n\n// export default store;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,CAAC;EACVC,WAAW,EAAE;AACf,CAAC;AAED,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC/BK,IAAI,EAAE,SAAS;EACfJ,YAAY;EACZK,QAAQ,EAAC;IACPC,SAASA,CAACC,KAAK,EAAC;MACdA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDO,SAASA,CAACD,KAAK,EAAC;MACdA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDQ,OAAOA,CAACF,KAAK,EAAC;MACZA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDK,SAASA,CAACC,KAAK,EAAC;MACdA,KAAK,CAACN,OAAO,EAAE;IACjB;EACF;AACF,CAAC,CAAC;AAGF,MAAMS,cAAc,GAAGA,CAACH,KAAK,GAAGP,YAAY,EAAEW,MAAM,KAAK;EACvD,IAAIA,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO;MACLX,OAAO,EAAEM,KAAK,CAACN,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEK,KAAK,CAACL;IACrB,CAAC;EACH;EAEA,IAAIS,MAAM,CAACC,IAAI,KAAK,UAAU,EAAE;IAC9B,OAAO;MACLX,OAAO,EAAEM,KAAK,CAACN,OAAO,GAAGU,MAAM,CAACE,MAAM;MACtCX,WAAW,EAAEK,KAAK,CAACL;IACrB,CAAC;EACH;EAEA,IAAIS,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO;MACLX,OAAO,EAAEM,KAAK,CAACN,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEK,KAAK,CAACL;IACrB,CAAC;EACH;EAEA,IAAIS,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAO;MACLV,WAAW,EAAE,CAACK,KAAK,CAACL,WAAW;MAC/BD,OAAO,EAAEM,KAAK,CAACN;IACjB,CAAC;EACH;EAEA,OAAOM,KAAK;AACd,CAAC;AAED,MAAMO,KAAK,GAAGC,WAAW,CAACL,cAAc,CAAC;;AAGzC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}